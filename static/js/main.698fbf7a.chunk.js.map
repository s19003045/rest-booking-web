{"version":3,"sources":["store/StoreProvider/combineReducer.js","store/action.js","store/reducers/mainReducer.js","store/reducers/homeReducer.js","store/StoreProvider/rootReducer.js","store/StoreProvider/index.js","layout/header/DesktopHeader.js","layout/header/MobileHeader.js","layout/header/index.js","layout/body/index.js","layout/body/DesktopBody.js","layout/body/MobileBody.js","layout/footer/DesktopFooter.js","layout/footer/MobileFooter.js","layout/footer/index.js","layout/index.js","components/auth/NotAuth.js","authLayer/index.js","API/restBooking/API.js","config/web.js","dataLayer/fetch.js","dataLayer/index.js","components/common/NavTab.js","components/common/CardInfo.js","components/Home/mockData.js","components/Home/service.js","components/Home/AllList.js","components/Home/NewList.js","components/Home/searchComp/index.js","components/Home/Search.js","components/Home/index.js","components/User/index.js","components/setting/index.js","components/common/CustomCarousel.js","components/Home/RestInfo/RestInfoStyle.js","components/Home/RestInfo/RestInfo.js","App-route.js","components/auth/NotFound.js","routerLayer/index.js","App.js","reportWebVitals.js","index.js"],"names":["combineReducer","reducers","reducerKeys","Object","keys","objInitState","forEach","key","initState","undefined","type","Error","state","action","previousState","Act","SET_MENU_OPENED","SET_IS_FIREBASE_AUTH_ON","SET_SEARCH_VALUE","SET_PRE_SEARCH_VALUE","START_SEARCH","PUSH_SEARCH_QUERY","REMOVE_SEARCH_QUERY","CLEAR_SEARCH_CACHE","SET_CUR_RESULT","menuOpened","isFirebaseAuthOn","mainReducer","payload","searchValue","preSearchValue","startSearch","searchQuery","curResult","main","home","filter","query","searchInitState","StoreContext","createContext","StoreProvider","children","useReducer","dispatch","store","React","useMemo","Provider","value","DesktopHeader","authorize","Box","bgcolor","color","Container","Grid","container","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","desktop","mobile","classes","useState","auth","anchorEl","setAnchorEl","open","Boolean","handleClose","className","AppBar","position","Toolbar","justify","item","IconButton","Typography","variant","fontWeight","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Avatar","alt","src","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Body","component","height","overflow","mt","Component","style","DesktopFooter","bottom","m","p","width","textAlign","direction","alignItems","footerBarList","name","path","icon","fontSize","user","setting","RouteIconHOC","Icon","Footer","location","useLocation","pathName","history","useHistory","curPath","setCurPath","useEffect","pathname","borderTop","values","map","e","push","Layout","props","Fragment","Hidden","xsDown","smUp","NotAuth","xs","sm","md","lg","Alert","severity","AuthLayer","useContext","domain","token","API","test","getRestaurant","getRestaurants","getMenus","searchRestByKeyword","STATUS","ERR_MESSAGE","fetch","webStyleSetting","Promise","resolve","reject","APIdata","data","status","DataLayer","then","catch","err","console","log","top","NavTab","tabs","handleTabChange","curTab","val","setVal","Paper","square","elevation","Tabs","indicatorColor","textColor","onChange","newValue","tab","Tab","label","maxWidth","CardInfo","restaurant","handleInfoClick","handleImgClick","handleCheckboxChange","Card","CardActionArea","CardMedia","image","imgUrl","CardContent","gutterBottom","Checkbox","checked","address","imgIds","randomImgId","Math","floor","random","randomImgUrl","length","Number","isInteger","replace","imgUrls","i","randomChecked","round","restCategories","getRandomItem","items","Array","isArray","allRestList","url","faker","datatype","uuid","words","cityName","streetAddress","tel","phone","phoneNumber","description","lorem","paragraphs","category","newRestList","imgSize","small","size","normal","large","genFakeImgUrls","urls","indexOf","keyword","trim","restFind","restList","keysSearch","keywordTrim","rest","found","hasOwnProperty","findRestByKeyword","restaurantType","new","all","AllList","search","hash","curRests","setCurRests","mb","NewList","CssOutlinedInput","withStyles","borderColor","OutlinedInput","display","SearchBar","placeholder","defaultValue","onSearch","useInputLabel","onKeyUp","disabled","setKeyword","FormControl","fullWidth","InputLabel","htmlFor","target","focused","endAdornment","InputAdornment","onMouseDown","preventDefault","edge","inputProps","labelWidth","defaultProps","CLASS_TYPE","SERACH_STATE","Search","queryString","parse","currentKeyword","setCurrentKeyword","preKeyword","setPreKeyword","disableSearch","setDisableSearch","curRestList","setCurRestList","searchState","setSearchState","curClassType","preCurClassType","handleSearch","setTimeout","finally","0","tabIdx","1","2","TabComponentHOC","Home","_tabs","tabsArray","_name","index","idx","toLowerCase","findIndex","setCurTab","pt","pb","User","Setting","CustomCarousel","carouselImgUrls","thumbImgUrls","setValue","thumbnails","setThumbnails","_thumbnails","uuidv4","plugins","RestInfoStyle","divider","backgroundColor","borderRadius","routes","withHeader","withFooter","public","authority","restId","curRest","setCutRest","setCarouselImgUrls","setThumbImgUrls","setLargeImgUrls","randomId","normalImgUrls","largeImgUrls","mx","go","my","NotFound","RouterLayer","r","route","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.698fbf7a.chunk.js","sourcesContent":["const combineReducer = (reducers) => {\n    const reducerKeys = Object.keys(reducers);\n    const objInitState = {};\n\n    reducerKeys.forEach((key) => {\n        const initState = reducers[key](undefined, { type: \"\" });\n        if (initState === \"undefined\") {\n            throw new Error(`${key} does not return state.`);\n        }\n        objInitState[key] = initState;\n    });\n\n    return (state, action) => {\n        if (action) {\n            reducerKeys.forEach((key) => {\n                const previousState = objInitState[key];\n                objInitState[key] = reducers[key](previousState, action);\n            });\n        }\n        return { ...objInitState };\n    };\n};\n\nexport default combineReducer;\n","const Act = {\n    /** main */\n    SET_MENU_OPENED: \"SET_MENU_OPENED\",\n    SET_IS_FIREBASE_AUTH_ON: \"SET_IS_FIREBASE_AUTH_ON\",\n\n    /** home */\n    SET_SEARCH_VALUE: \"SET_SEARCH_VALUE\",\n    SET_PRE_SEARCH_VALUE: \"SET_PRE_SEARCH_VALUE\",\n    //\n    START_SEARCH: \"START_SEARCH\",\n    PUSH_SEARCH_QUERY: \"PUSH_SEARCH_QUERY\",\n    REMOVE_SEARCH_QUERY: \"REMOVE_SEARCH_QUERY\",\n    CLEAR_SEARCH_CACHE: \"CLEAR_SEARCH_CACHE\",\n    //\n    SET_CUR_RESULT: \"SET_CUR_RESULT\",\n\n    /** user */\n};\n\nexport default Act;\n","import Act from \"../action\";\n\nconst initState = {\n    menuOpened: true,\n    isFirebaseAuthOn: true,\n};\n\nconst mainReducer = (state = initState, action) => {\n    switch (action.type) {\n        case Act.SET_MENU_OPENED:\n            return { ...state, menuOpened: action.payload };\n        case Act.SET_IS_FIREBASE_AUTH_ON:\n            return { ...state, isFirebaseAuthOn: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default mainReducer;\n","import Act from \"../action\";\n\nconst initState = {\n    /* search */\n    searchValue: null,\n    preSearchValue: null,\n    startSearch: false,\n    searchQuery: [],\n    /* current result */\n    curResult: null,\n};\n\nconst homeReducer = (state = initState, action) => {\n    switch (action.type) {\n        case Act.SET_SEARCH_VALUE:\n            return { ...state, searchValue: action.payload };\n        case Act.SET_PRE_SEARCH_VALUE:\n            return { ...state, preSearchValue: action.payload };\n        /**/\n        case Act.START_SEARCH:\n            return {\n                ...state,\n                startSearch: action.payload,\n            };\n        case Act.PUSH_SEARCH_QUERY:\n            return {\n                ...state,\n                searchQuery: [...state.searchQuery, action.payload],\n            };\n        case Act.REMOVE_SEARCH_QUERY:\n            return {\n                ...state,\n                searchQuery: state.searchQuery.filter(\n                    (query) => query !== action.payload\n                ),\n            };\n        case Act.CLEAR_SEARCH_CACHE:\n            return {\n                ...state,\n                searchQuery: searchInitState.searchQuery,\n            };\n        /**/\n        case Act.SET_CUR_RESULT:\n            return {\n                ...state,\n                curResult: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default homeReducer;\n","// combine\nimport combineReducer from \"./combineReducer\";\n\n// reducer\nimport mainReducer from \"../reducers/mainReducer\";\nimport homeReducer from \"../reducers/homeReducer\";\n\n// all in one\nconst reducers = combineReducer({\n    main: mainReducer,\n    home: homeReducer,\n});\n\nexport default reducers;\n","import React, { useReducer, createContext } from \"react\";\n\nimport reducers from \"./rootReducer\";\n\n// 建立一個 context component ，並匯出給子 component 使用\nconst StoreContext = createContext(undefined);\n\n// 初始化\nconst initState = reducers();\n\n// provider global store center\n// eslint-disable-next-line react/prop-types\nconst StoreProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducers, initState);\n    // Important(!): memoize array value. Else all context consumers update on *every* render\n    const store = React.useMemo(() => [state, dispatch], [state]);\n    // 透過 context component.Provider 將 store 傳下去\n    // eslint-disable-next-line react/jsx-filename-extension\n    return (\n        <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n    );\n};\n\nexport { StoreContext };\n\nexport default StoreProvider;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\n\nconst DesktopHeader = ({ authorize }) => {\n    /** 可以設定 RWD: desktop 整體樣式 */\n    return (\n        <Box bgcolor=\"primary.main\" color=\"white\">\n            <Container>\n                <Grid container>\n                    <h1>Desktop Header</h1>\n                </Grid>\n            </Container>\n        </Box>\n    );\n};\n\nexport default DesktopHeader;\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\n// image\nimport avatar from \"../../image/avatar-128/boy_icon-icons.com_55048.png\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst MobileHeader = ({ authorize }) => {\n    const classes = useStyles();\n    // todo: get auth state from store\n    const [auth, setAuth] = useState(true);\n    //\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    /** 可以設定 RWD: mobile 整體樣式 */\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" color=\"inherit\">\n                <Toolbar>\n                    <Grid container justify=\"space-between\">\n                        <Grid item>\n                            <IconButton color=\"inherit\">\n                                <Typography variant=\"h6\">\n                                    <Box fontWeight=\"bold\">LOGO</Box>\n                                </Typography>\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            {auth && (\n                                <div>\n                                    <IconButton\n                                        aria-label=\"account of current user\"\n                                        aria-controls=\"menu-appbar\"\n                                        aria-haspopup=\"true\"\n                                        onClick={handleMenu}\n                                        color=\"inherit\"\n                                    >\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src=\"/static/image/avatar-128/boy_icon-icons.com_55048.png\"\n                                        />\n                                        {/* <AccountCircle fontSize=\"large\" /> */}\n                                    </IconButton>\n                                    <Menu\n                                        id=\"menu-appbar\"\n                                        anchorEl={anchorEl}\n                                        anchorOrigin={{\n                                            vertical: \"top\",\n                                            horizontal: \"right\",\n                                        }}\n                                        keepMounted\n                                        transformOrigin={{\n                                            vertical: \"top\",\n                                            horizontal: \"right\",\n                                        }}\n                                        open={open}\n                                        onClose={handleClose}\n                                    >\n                                        <MenuItem onClick={handleClose}>\n                                            Profile\n                                        </MenuItem>\n                                        <MenuItem onClick={handleClose}>\n                                            My account\n                                        </MenuItem>\n                                    </Menu>\n                                </div>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default MobileHeader;\n","import React from \"react\";\nimport DesktopHeader from \"./DesktopHeader\";\nimport MobileHeader from \"./MobileHeader\";\n\nconst Header = {\n    desktop: DesktopHeader,\n    mobile: MobileHeader,\n};\n\nexport default Header;\n","import React from \"react\";\nimport DesktopBody from \"./DesktopBody\";\nimport MobileBody from \"./MobileBody\";\n\nconst Body = {\n    desktop: DesktopBody,\n    mobile: MobileBody,\n};\n\nexport default Body;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst DesktopBody = ({ component: Component, authorize }) => {\n    /** 可以設定 RWD: desktop 整體樣式 */\n    return (\n        <Box height=\"calc(100vh - 124px)\" overflow=\"auto\">\n            <Container>\n                <Grid container justify=\"center\">\n                    <Box mt={5}>\n                        <Typography variant=\"h2\">請使用行動版瀏覽</Typography>\n                    </Box>\n                </Grid>\n                {/* <Component /> */}\n            </Container>\n        </Box>\n    );\n};\n\nexport default DesktopBody;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\n\nconst MobileBody = ({ component: Component, authorize }) => {\n    /** 可以設定 RWD: mobile 整體樣式 */\n    return (\n        <Box\n            height=\"calc(100vh - 124px)\"\n            overflow=\"auto\"\n            style={{ height: \"fill-available\" }}\n        >\n            <Container>\n                <Component />\n            </Container>\n        </Box>\n    );\n};\n\nexport default MobileBody;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst gridStyles = makeStyles({\n    root: {},\n});\n\nconst DesktopFooter = ({ authorize }) => {\n    // style\n    const gridClasses = gridStyles;\n    /** 可以設定 RWD: desktop 整體樣式 */\n    return (\n        <Box\n            position=\"absolute\"\n            bottom=\"0px\"\n            m={0}\n            p={0}\n            width=\"100%\"\n            textAlign=\"center\"\n            color=\"white\"\n            bgcolor=\"text.disabled\"\n        >\n            <Container>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <h4>Desktop Footer</h4>\n                    </Grid>\n                </Grid>\n            </Container>\n        </Box>\n    );\n};\n\nexport default DesktopFooter;\n","import React, { useState, useEffect } from \"react\";\n\n// material-ui\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircleOutlined from \"@material-ui/icons/AccountCircleOutlined\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// router\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nconst gridStyles = makeStyles({\n    root: {},\n});\n\nconst footerBarList = {\n    home: {\n        key: \"route-home\",\n        name: \"home\",\n        path: \"/\",\n        icon: <HomeOutlinedIcon fontSize=\"large\" />,\n    },\n    user: {\n        key: \"route-about\",\n        name: \"user\",\n        path: \"/user\",\n        icon: <AccountCircleOutlined fontSize=\"large\" />,\n    },\n    setting: {\n        key: \"route-setting\",\n        name: \"setting\",\n        path: \"/setting\",\n        icon: <MenuIcon fontSize=\"large\" />,\n    },\n};\n\nconst RouteIconHOC = ({ icon: Icon, color }) => {\n    return <Icon color=\"primary\" />;\n};\n\nconst MobileFooter = ({ authorize }) => {\n    // route\n    const location = useLocation();\n    const { pathName } = location;\n    const history = useHistory();\n    // style\n    const gridClasses = gridStyles;\n    // local state\n    const [curPath, setCurPath] = useState(pathName);\n\n    // handle click route icon\n    const handleRoute = (e, path) => {\n        setCurPath(path);\n        // go to page\n        history.push(path);\n    };\n\n    // 取得 url 的路徑, save to curPath\n    useEffect(() => {\n        if (!location) return;\n        setCurPath(location.pathname);\n    }, [location.pathName]);\n\n    /** 可以設定 RWD: mobile 整體樣式 */\n    return (\n        <Box\n            position=\"absolute\"\n            bottom=\"0px\"\n            m={0}\n            p={0}\n            borderTop=\"1px solid #f2f2f2\"\n            width=\"100%\"\n            textAlign=\"center\"\n            color=\"#000\"\n            bgcolor=\"white\"\n        >\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n                {footerBarList &&\n                    Object.values(footerBarList).map((item) => (\n                        <Grid item key={item.key}>\n                            <IconButton\n                                onClick={(e) => handleRoute(e, item.path)}\n                                color={\n                                    curPath === item.path\n                                        ? \"inherit\"\n                                        : \"default\"\n                                }\n                            >\n                                <RouteIconHOC icon={() => item.icon} />\n                            </IconButton>\n                        </Grid>\n                    ))}\n            </Grid>\n        </Box>\n    );\n};\n\nexport default MobileFooter;\n","import React from \"react\";\nimport DesktopFooter from \"./DesktopFooter\";\nimport MobileFooter from \"./MobileFooter\";\n\nconst Footer = {\n    desktop: DesktopFooter,\n    mobile: MobileFooter,\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Header from \"./header\";\nimport Body from \"./body\";\nimport Footer from \"./footer\";\n\nconst Layout = (props) => {\n    /** layout: 可以 RWD, 調整 header, body, footer 的顯示 */\n\n    return (\n        <React.Fragment>\n            {/* Header RWD*/}\n            <Hidden xsDown>\n                <Header.desktop {...props} />\n            </Hidden>\n            <Hidden smUp>\n                <Header.mobile {...props} />\n            </Hidden>\n\n            {/* Body RWD */}\n            {/* <Hidden xsDown>\n                <Body.desktop {...props} />\n            </Hidden> */}\n            {/* <Hidden smUp> */}\n            <Body.mobile {...props} />\n            {/* </Hidden> */}\n\n            {/* Footer RWD */}\n            <Hidden xsDown>\n                <Footer.desktop {...props} />\n            </Hidden>\n            <Hidden smUp>\n                <Footer.mobile {...props} />\n            </Hidden>\n        </React.Fragment>\n    );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n// mui-lab\nimport Alert from \"@material-ui/lab/Alert\";\n// style\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"100%\",\n    },\n});\n\nconst NotAuth = () => {\n    const classes = useStyles();\n    return (\n        <Grid container justify=\"center\">\n            <Grid item xs={12} sm={10} md={8} lg={8}>\n                <div className={useStyles.root}>\n                    <Alert severity=\"warning\" className={useStyles.root}>\n                        You are not authorized to this page.\n                    </Alert>\n                </div>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default NotAuth;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { StoreContext } from \"../store/StoreProvider\";\n// component\nimport Layout from \"../layout\";\nimport NotAuth from \"../components/auth/NotAuth\";\n\nconst AuthLayer = (props) => {\n    // store\n    const [state, dispatch] = useContext(StoreContext);\n    // local state\n    const [authorize, setAuthorize] = useState(true);\n\n    /** 定義 authentication 方法: e.g. LINE authentication */\n\n    return (\n        (authorize && props.children) || (\n            <Layout component={NotAuth} authorize={authorize} />\n        )\n    );\n};\n\nexport default AuthLayer;\n","import { isProduction, isDevelopment } from \"../../common\";\nimport config from \"../../config/web\";\nimport devConfig from \"../../config/web.dev\";\n\nconst domain = isDevelopment() ? devConfig.domain : config.domain;\n\nconst API = {\n    domain: domain,\n    // testing API\n    test: () => `${domain}/test`,\n    //\n    getRestaurant: () => `${domain}/restaurant?id={id}`,\n    getRestaurants: () =>\n        `${domain}/restaurants?limit={limit}&offset={offset}&type={type}`,\n    getMenus: () => `${domain}/restaurant/menus?id={id}`,\n    // search\n    searchRestByKeyword: () => `${domain}/search?keyword={keyword}`,\n};\n\nexport default API;\n","// config for production\nconst config = {\n    domain: \"lcoalhost:5000\",\n    token: \"\",\n};\n\nexport default config;\n","import axios from \"axios\";\nimport API from \"../API/restBooking/API\";\n\nconst STATUS = {\n    success: \"ok\",\n    failure: \"fail\",\n};\nconst ERR_MESSAGE = {\n    400: \"Bad Request\",\n    401: \"Unauthorized\",\n    403: \"Forbidden\",\n    404: \"Not Found\",\n};\n\nconst fetch = {\n    webStyleSetting() {\n        return new Promise((resolve, reject) => {\n            /** fetch API */\n            const APIdata = { data: {}, status: \"ok\" };\n\n            if (APIdata.status === STATUS.success) {\n                return resolve(APIdata);\n            }\n            reject(new Error(ERR_MESSAGE[400]));\n        });\n    },\n};\n\nexport default fetch;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { StoreContext } from \"../store/StoreProvider\";\nimport fetch from \"./fetch\";\n\nconst DataLayer = () => {\n    // store\n    const [state, dispatch] = useContext(StoreContext);\n    // local state\n\n    /** 定義要 fetch API 並儲存 data 至 store, 供 compoenent 使用  */\n    useEffect(() => {\n        // e.g. 取得 web style setting\n        fetch\n            .webStyleSetting()\n            .then((data) => {\n                // console.log(data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n    return null;\n};\n\nexport default DataLayer;\n","import React, { useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\nimport { makeStyles, TableCell } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        top: \"64px\",\n        \"& .MuiTabs-scroller.MuiTabs-fixed span\": {\n            height: \"5px\",\n        },\n    },\n}));\n\nconst NavTab = ({ tabs, handleTabChange, curTab }) => {\n    const classes = useStyles();\n\n    //\n    const [val, setVal] = useState(curTab || 0);\n\n    const handleChange = (event, newValue) => {\n        setVal(newValue);\n        handleTabChange(newValue);\n    };\n\n    return (\n        <AppBar className={classes.root} position=\"fixed\">\n            <Paper square variant=\"elevation\" elevation={0}>\n                <Tabs\n                    value={val}\n                    indicatorColor=\"secondary\"\n                    textColor=\"inherit\"\n                    onChange={handleChange}\n                    aria-label=\"disabled tabs example\"\n                    variant=\"fullWidth\"\n                >\n                    {tabs &&\n                        Object.values(tabs).map((tab) => {\n                            return (\n                                <Tab\n                                    key={tab.key}\n                                    label={tab.label}\n                                    icon={tab.icon}\n                                />\n                            );\n                        })}\n                </Tabs>\n            </Paper>\n        </AppBar>\n    );\n};\n\nexport default NavTab;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { rest } from \"lodash\";\nimport { Checkbox } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n    },\n});\n\nconst CardInfo = ({\n    restaurant,\n    handleInfoClick,\n    handleImgClick,\n    handleCheckboxChange,\n}) => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <CardActionArea>\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"140\"\n                    width=\"100%\"\n                    image={restaurant.imgUrl}\n                    title=\"Contemplative Reptile\"\n                    onClick={(e) => {\n                        if (handleImgClick) handleImgClick(e, restaurant);\n                    }}\n                />\n                <CardContent>\n                    <Box\n                        onClick={(e) => {\n                            if (handleInfoClick) {\n                                console.log(\"click\");\n                                handleInfoClick(e, restaurant);\n                            }\n                        }}\n                    >\n                        <Grid\n                            container\n                            direction=\"column\"\n                            justify=\"space-between\"\n                        >\n                            <Grid\n                                item\n                                container\n                                justify=\"space-between\"\n                                alignItems=\"center\"\n                            >\n                                <Grid item xs={10}>\n                                    <Typography\n                                        gutterBottom\n                                        variant=\"subtitle1\"\n                                    >\n                                        {restaurant && restaurant.name}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={1}>\n                                    <Checkbox\n                                        checked={restaurant.checked}\n                                        onChange={(e) =>\n                                            handleCheckboxChange(e, restaurant)\n                                        }\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Typography\n                                    variant=\"caption\"\n                                    color=\"textSecondary\"\n                                >\n                                    {restaurant && restaurant.address}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </CardContent>\n            </CardActionArea>\n            {/* <CardActions>\n                <Button size=\"small\" color=\"primary\">\n                    Share\n                </Button>\n                <Button size=\"small\" color=\"primary\">\n                    Learn More\n                </Button>\n            </CardActions> */}\n        </Card>\n    );\n};\n\nexport default CardInfo;\n","import faker from \"faker\";\n\nconst imgIds = { min: 110, max: 1084 };\n\nconst randomImgId = () => {\n    return Math.floor(Math.random() * (imgIds.max - imgIds.min)) + imgIds.min;\n};\n\nconst randomImgUrl = (length = 1) => {\n    if (length === 1 || !Number.isInteger(length))\n        return \"https://picsum.photos/id/{id}/500/300\".replace(\n            \"{id}\",\n            randomImgId()\n        );\n    const imgUrls = [];\n    for (let i = 0; i < length; i++) {\n        imgUrls.push(randomImgUrl());\n    }\n    return imgUrls;\n};\n\nconst randomChecked = () => {\n    return [true, false][Math.round(Math.random())];\n};\n\nconst restCategories = [\n    \"日式燒肉\",\n    \"義式\",\n    \"美式\",\n    \"泰式/東南亞料理\",\n    \"歐式/綜合西式\",\n    \"台式\",\n    \"中式\",\n    \"港式\",\n    \"韓式\",\n];\n\nconst getRandomItem = (items) => {\n    if (!Array.isArray(items)) return null;\n    return items[Math.floor(Math.random() * items.length)];\n};\n\nexport const allRestList = randomImgUrl(20).map((url) => ({\n    key: faker.datatype.uuid(),\n    id: faker.datatype.uuid(),\n    name: faker.random.words(),\n    address: faker.address.cityName() + \", \" + faker.address.streetAddress(),\n    tel: faker.phone.phoneNumber(),\n    imgUrl: url,\n    description: faker.lorem.paragraphs(),\n    category: getRandomItem(restCategories),\n    checked: randomChecked(),\n}));\n\nexport const newRestList = randomImgUrl(6).map((url) => ({\n    key: faker.datatype.uuid(),\n    id: faker.datatype.uuid(),\n    name: faker.random.words(),\n    address: faker.address.cityName() + \", \" + faker.address.streetAddress(),\n    tel: faker.phone.phoneNumber(),\n    imgUrl: url,\n    description: faker.lorem.paragraphs(),\n    category: getRandomItem(restCategories),\n    checked: randomChecked(),\n}));\n\n/**\n * 以關鍵字搜尋餐廳\n * @param {Array} restList\n * @param {String} keyword\n * @param {Array || String} keys\n * @returns\n */\nexport const findRestByKeyword = (restList, keyword, keys = [\"name\"]) => {\n    if (!(restList && Array.isArray(restList))) return [];\n    if (!keyword) return restList;\n    if (typeof keyword !== \"string\") return [];\n    if (!(Array.isArray(keys) || typeof keys === \"string\")) return [];\n    const keysSearch = Array.isArray(keys) ? keys : [keys];\n    const newRestList = [];\n    let keywordTrim = keyword.trim();\n    restList.forEach((rest) => {\n        let found = false;\n        keysSearch.forEach((key) => {\n            if (typeof key !== \"string\" || !rest.hasOwnProperty(key)) return;\n            if (rest[key].indexOf(keywordTrim) >= 0) found = true;\n        });\n        if (found) newRestList.push(rest);\n    });\n    return newRestList;\n};\n\n// todo: 假資料, 帶 api 完成後要移除\nconst fakeImgUrl = \"https://fakeimg.pl/{size}/282828/EAE0D0/?text=menu{id}\";\n\nexport const imgSize = {\n    small: {\n        name: \"small\",\n        size: \"80x120\",\n    },\n    normal: {\n        name: \"normal\",\n        size: \"200x300\",\n    },\n    large: {\n        name: \"large\",\n        size: \"400x600\",\n    },\n};\n\nexport const genFakeImgUrls = (length, size) => {\n    const urls = [];\n    if (!Number.isInteger(length)) return urls;\n    if (Object.keys(imgSize).indexOf(size) < 0) size = imgSize.normal.name;\n\n    for (let i = 0; i < length; i++) {\n        const url = fakeImgUrl\n            .replace(\"{id}\", i)\n            .replace(\"{size}\", imgSize[size].size);\n        urls.push(url);\n    }\n    return urls;\n};\n","import API from \"../../API/restBooking/API\";\nimport axios from \"axios\";\nimport Act from \"../../store/action\";\n// todo: 先使用 mock data, 待 API 完成後要移除\nimport {\n    allRestList,\n    newRestList,\n    findRestByKeyword,\n    genFakeImgUrls,\n    imgSize,\n} from \"./mockData\";\n\nexport const searchRestByKeyword = (keyword, dispatch) => {\n    if (!(keyword && typeof keyword === \"string\")) return null;\n    const url = API.searchRestByKeyword().replace(\"{keyword}\", keyword.trim());\n\n    if (dispatch) {\n        dispatch({\n            type: Act.PUSH_SEARCH_QUERY,\n            payload: url,\n        });\n    }\n\n    return new Promise((resolve, reject) => {\n        // todo: 先使用 mock data, 待 API 完成後要移除\n        const restFind = findRestByKeyword(allRestList, keyword.trim(), \"name\");\n        if (dispatch) {\n            dispatch({\n                type: Act.REMOVE_SEARCH_QUERY,\n                payload: url,\n            });\n        }\n\n        resolve(restFind);\n\n        /** todo: fetch API */\n        // axios\n        //     .get(url)\n        //     .then((res) => {\n        //         resoleve(res.data);\n        //     })\n        //     .catch((err) => reject(err));\n    });\n};\n\nexport const getRestaurant = (id, dispatch) => {\n    if (!(id && typeof id === \"string\")) return null;\n    const url = API.getRestaurant().replace(\"{id}\", id);\n\n    if (dispatch) {\n        dispatch({\n            type: Act.PUSH_SEARCH_QUERY,\n            payload: url,\n        });\n    }\n\n    return new Promise((resolve, reject) => {\n        // todo: 先使用 mock data, 待 API 完成後要移除\n        const randomId = Math.floor(Math.random() * allRestList.length);\n\n        const restFind = allRestList[randomId];\n        if (dispatch) {\n            dispatch({\n                type: Act.REMOVE_SEARCH_QUERY,\n                payload: url,\n            });\n        }\n\n        resolve(restFind);\n\n        /** todo: fetch API */\n        // axios\n        //     .get(url)\n        //     .then((res) => {\n        //         resoleve(res.data);\n        //     })\n        //     .catch((err) => reject(err));\n    });\n};\n\nexport const restaurantType = {\n    new: \"new\",\n    all: \"all\",\n};\n\nexport const getRestaurants = (type, dispatch) => {\n    if (!(type && Object.values(restaurantType).indexOf(type) >= 0)) {\n        type = restaurantType.all;\n    }\n\n    const url = API.getRestaurants()\n        .replace(\"{limit}\", -1)\n        .replace(\"{offset}\", 0)\n        .replace(\"{type}\", type);\n\n    if (dispatch) {\n        dispatch({\n            type: Act.PUSH_SEARCH_QUERY,\n            payload: url,\n        });\n    }\n\n    return new Promise((resolve, reject) => {\n        // todo: 先使用 mock data, 待 API 完成後要移除\n        const restFind =\n            type === restaurantType.all ? allRestList : newRestList;\n\n        if (dispatch) {\n            dispatch({\n                type: Act.REMOVE_SEARCH_QUERY,\n                payload: url,\n            });\n        }\n\n        resolve(restFind);\n\n        /** todo: fetch API */\n        // axios\n        //     .get(url)\n        //     .then((res) => {\n        //         resoleve(res.data);\n        //     })\n        //     .catch((err) => reject(err));\n    });\n};\n\nexport const getMenus = (restId, dispatch) => {\n    if (!restId) return Promise.reject(new Error(\"parameter error\"));\n\n    const url = API.getMenus().replace(\"{id}\", restId);\n\n    if (dispatch) {\n        dispatch({\n            type: Act.PUSH_SEARCH_QUERY,\n            payload: url,\n        });\n    }\n\n    return new Promise((resolve, reject) => {\n        // todo: 先使用 mock data, 待 API 完成後要移除\n        const normalImgUrls = genFakeImgUrls(10, imgSize.normal.name);\n        const thumbImgUrls = genFakeImgUrls(10, imgSize.small.name);\n        const largeImgUrls = genFakeImgUrls(10, imgSize.large.name);\n\n        if (dispatch) {\n            dispatch({\n                type: Act.REMOVE_SEARCH_QUERY,\n                payload: url,\n            });\n        }\n\n        resolve({ normalImgUrls, thumbImgUrls, largeImgUrls });\n\n        /** todo: fetch API */\n        // axios\n        //     .get(url)\n        //     .then((res) => {\n        //         resoleve(res.data);\n        //     })\n        //     .catch((err) => reject(err));\n    });\n};\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { StoreContext } from \"../../store/StoreProvider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport CardInfo from \"../common/CardInfo\";\n//\nimport { useHistory } from \"react-router\";\n//\nimport { getRestaurants, restaurantType } from \"./service\";\n\nconst AllList = ({ restList }) => {\n    // store\n    const [state, dispatch] = useContext(StoreContext);\n\n    // route\n    const history = useHistory();\n    const { location } = history;\n    const { pathname, search, hash } = location;\n\n    // local state\n    const [curRests, setCurRests] = useState(null);\n\n    const handleInfoClick = (e, restaurant) => {\n        history.push({\n            pathname: \"restInfo\",\n            search: `restId=${restaurant.id}`,\n        });\n    };\n\n    const handleImgClick = (e, restaurant) => {\n        history.push({\n            pathname: \"restInfo\",\n            search: `restId=${restaurant.id}`,\n        });\n    };\n\n    const handleCheckboxChange = (e, restaurant) => {\n        // console.log(\"handleCheckboxChange\", restaurant);\n    };\n\n    useEffect(() => {\n        // fetch API\n        getRestaurants(restaurantType.all, dispatch)\n            .then((data) => {\n                setCurRests(data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                {curRests &&\n                    curRests.map((rest) => (\n                        <Box mb={2} key={rest.key}>\n                            <Grid item key={rest.key}>\n                                <CardInfo\n                                    restaurant={rest}\n                                    handleInfoClick={handleInfoClick}\n                                    handleImgClick={handleImgClick}\n                                    handleCheckboxChange={handleCheckboxChange}\n                                />\n                            </Grid>\n                        </Box>\n                    ))}\n            </Grid>\n        </React.Fragment>\n    );\n};\n\nexport default AllList;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { StoreContext } from \"../../store/StoreProvider\";\n//\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport CardInfo from \"../common/CardInfo\";\n//\nimport { useHistory } from \"react-router\";\n//\nimport { getRestaurants, restaurantType } from \"./service\";\n\nconst NewList = ({ restList }) => {\n    // store\n    const [state, dispatch] = useContext(StoreContext);\n    // route\n    const history = useHistory();\n    const { location } = history;\n    const { pathname, search, hash } = location;\n    // local state\n    const [curRests, setCurRests] = useState(null);\n\n    const handleInfoClick = (e, restaurant) => {\n        history.push({\n            pathname: \"restInfo\",\n            search: `restId=${restaurant.id}`,\n        });\n    };\n\n    const handleImgClick = (e, restaurant) => {\n        history.push({\n            pathname: \"restInfo\",\n            search: `restId=${restaurant.id}`,\n        });\n    };\n\n    const handleCheckboxChange = (e, restaurant) => {\n        // console.log(\"handleCheckboxChange\", restaurant);\n    };\n\n    useEffect(() => {\n        // fetch API\n        getRestaurants(restaurantType.new, dispatch)\n            .then((data) => {\n                setCurRests(data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                {curRests &&\n                    curRests.map((rest) => (\n                        <Box mb={2} key={rest.key}>\n                            <Grid item key={rest.key}>\n                                <CardInfo\n                                    restaurant={rest}\n                                    handleInfoClick={handleInfoClick}\n                                    handleImgClick={handleImgClick}\n                                    handleCheckboxChange={handleCheckboxChange}\n                                />\n                            </Grid>\n                        </Box>\n                    ))}\n            </Grid>\n        </React.Fragment>\n    );\n};\n\nexport default NewList;\n","import React, { useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport {\n    OutlinedInput,\n    InputAdornment,\n    InputLabel,\n    IconButton,\n    FormControl,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport PropTypes from \"prop-types\";\n\nconst CssOutlinedInput = withStyles({\n    root: {\n        borderColor: \"#c8c1b5\",\n        \"&:focus\": {\n            borderColor: \"#c8c1b5\",\n        },\n        \"&.Mui-focused\": {\n            borderColor: \"#c8c1b5\",\n        },\n        \"& fieldset\": {\n            borderColor: \"#c8c1b5\",\n        },\n        \"&:hover fieldset\": {\n            borderColor: \"#c8c1b5\",\n        },\n        \"&.Mui-focused fieldset\": {\n            \"&.MuiOutlinedInput-root.Mui-focused.MuiOutlinedInput-notchedOutline\":\n                {\n                    borderColor: \"#c8c1b5\",\n                },\n        },\n    },\n})(OutlinedInput);\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: \"flex\",\n    },\n}));\n\n// eslint-disable-next-line no-unused-vars\nconst SearchBar = ({\n    placeholder,\n    label,\n    defaultValue,\n    onChange,\n    onSearch,\n    useInputLabel,\n    onKeyUp,\n    disabled,\n}) => {\n    //\n    const defaultLabelWidth = 70;\n    const defaultLabel = \"關鍵字\";\n    //\n    const [keyword, setKeyword] = useState(\"\");\n    //\n    const classes = useStyles();\n    //\n    const handleSearch = () => {\n        if (onSearch) onSearch(keyword);\n    };\n    //\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <div className={classes.root}>\n            <FormControl variant=\"outlined\" fullWidth>\n                {useInputLabel && (\n                    <InputLabel htmlFor=\"outlined-adornment-keyword-search\">\n                        {label || defaultLabel}\n                    </InputLabel>\n                )}\n                <CssOutlinedInput\n                    id=\"outlined-adornment-keyword-search\"\n                    // className=\"searchBar__search-input\"\n                    // className={classes.root}\n                    placeholder={placeholder}\n                    onChange={(e) => {\n                        setKeyword(e.target.value);\n                        if (onChange) onChange(e);\n                    }}\n                    classes={{\n                        root: classes.root,\n                        focused: classes.focused,\n                    }}\n                    defaultValue={defaultValue}\n                    fullWidth\n                    endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"start search\"\n                                onClick={handleSearch}\n                                onMouseDown={handleMouseDownPassword}\n                                edge=\"end\"\n                            >\n                                <SearchIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    }\n                    inputProps={{\n                        onKeyUp,\n                    }}\n                    disabled={disabled}\n                    labelWidth={useInputLabel ? defaultLabelWidth : 0}\n                />\n            </FormControl>\n        </div>\n    );\n};\n\nSearchBar.defaultProps = {\n    placeholder: null,\n    label: null,\n    defaultValue: null,\n    useInputLabel: false,\n    disabled: false,\n    onChange: null,\n    onSearch: null,\n    onKeyUp: null,\n};\n\nSearchBar.propTypes = {\n    placeholder: PropTypes.string,\n    label: PropTypes.string,\n    defaultValue: PropTypes.string,\n    useInputLabel: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onChange: PropTypes.func,\n    onSearch: PropTypes.func,\n    onKeyUp: PropTypes.func,\n};\n\nexport default SearchBar;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardInfo from \"../common/CardInfo\";\n\n// route\nimport { useHistory } from \"react-router-dom\";\n// store\nimport { StoreContext } from \"../../store/StoreProvider\";\nimport Act from \"../../store/action\";\n//\nimport SearchBar from \"./searchComp\";\n// package\nimport queryString from \"query-string\";\n// service\nimport { searchRestByKeyword } from \"./service\";\n\n// mock data\nimport { allRestList } from \"./mockData\";\n\n// 搜尋類別\nconst CLASS_TYPE = {\n    default: \"default\",\n};\n\nconst SERACH_STATE = {\n    initial: \"initial\",\n    searching: \"searching\",\n    finishSearch: \"finishSearch\",\n};\n\nconst Search = ({ restList }) => {\n    // props\n    // mock data: 在 API 建立前先用假資料\n    restList = allRestList;\n\n    // store\n    const [state, dispatch] = useContext(StoreContext);\n    const { home } = state;\n    const { startSearch, searchQuery } = home;\n\n    // route\n    const history = useHistory();\n    const {\n        location: { search, pathname },\n    } = history;\n    const { keyword } = queryString.parse(search);\n\n    // global\n    // local state\n    const [currentKeyword, setCurrentKeyword] = useState(keyword);\n    const [preKeyword, setPreKeyword] = useState(\"\"); // 前次搜尋關鍵字\n    const [disableSearch, setDisableSearch] = useState(false);\n    const [defaultValue] = useState(keyword || \"\");\n    const [curRestList, setCurRestList] = useState(null);\n    const [searchState, setSearchState] = useState(SERACH_STATE.initial);\n    const [curClassType, setCurClassType] = useState(CLASS_TYPE.default);\n    const [preCurClassType, setPreCurClassType] = useState(CLASS_TYPE.default);\n\n    const handleInputChange = (e) => {\n        setCurrentKeyword(e.target.value.trim());\n        dispatch({\n            type: Act.SET_SEARCH_VALUE,\n            payload: e.target.value.trim(),\n        });\n    };\n\n    const handleSearch = (val = \"start\") => {\n        // 若此次搜尋關鍵字與前次搜尋關鍵字相同 or classType 未變動, 則不搜尋\n        if (preKeyword === currentKeyword && curClassType === preCurClassType)\n            return;\n        if (currentKeyword === \"\") {\n            // todo: 提示訊息, 請輸入關鍵字\n            return;\n        }\n\n        // 清空前次搜尋的資料\n\n        // 開始搜尋\n        dispatch({\n            type: Act.START_SEARCH,\n            payload: true,\n        });\n        // 隨便塞一個 val 至 searchQuery 陣列中,\n        dispatch({\n            type: Act.PUSH_SEARCH_QUERY,\n            payload: val,\n        });\n        // 開始搜尋時, 則把此次搜尋關鍵字存進 preKeyword, 供下次搜尋時比對\n        setPreKeyword(currentKeyword);\n        // 開始搜尋時, 則把 curClassType 存進 preCurClassType, 供下次搜尋時比對\n        // setPreCurClassType(curClassType);\n        //\n        setTimeout(() => {\n            dispatch({\n                type: Act.REMOVE_SEARCH_QUERY,\n                payload: val,\n            });\n        }, 1000);\n    };\n\n    const handleInputKeyUp = (e) => {\n        if (e.key === \"Enter\") {\n            handleSearch();\n            // do something when press enter\n            // console.log('handleInputKeyUp', e);\n            // fullArtSearchLitTheme({ searchDispatch, ms: 'MSAborigines', keyword: currentKeyword });\n        }\n    };\n\n    // const handleClassTypeChange = (e) => {\n    //     setCurClassType(e.target.value);\n    // };\n\n    // 如果 url 的 query string 有帶 keyword, 則開始搜尋\n    if (keyword && keyword !== \"\") {\n        // 開始搜尋\n        handleSearch();\n    }\n\n    // 清空 前次搜尋結果\n    useEffect(() => {\n        dispatch({\n            type: Act.SET_CUR_RESULT,\n            payload: null,\n        });\n    }, []);\n\n    useEffect(() => {\n        if (startSearch) {\n            setSearchState(SERACH_STATE.searching);\n            // todo: 暫時先以假資料測試\n            searchRestByKeyword(currentKeyword, dispatch)\n                .then((data) => {\n                    // set local state\n                    setCurRestList(data);\n                    // set to store\n                    dispatch({\n                        type: Act.SET_CUR_RESULT,\n                        payload: data,\n                    });\n                })\n                .catch((err) => {\n                    // todo: set message for user\n\n                    console.log(err);\n                })\n                .finally(() => {\n                    // set to store\n                    dispatch({\n                        type: Act.START_SEARCH,\n                        payload: false,\n                    });\n                    setSearchState(SERACH_STATE.finishSearch);\n                });\n        }\n    }, [startSearch]);\n\n    useEffect(() => {\n        if (searchQuery && searchQuery.length === 0) {\n            setDisableSearch(false);\n        } else {\n            setDisableSearch(true);\n        }\n    }, [searchQuery]);\n\n    const handleInfoClick = (e, restaurant) => {\n        history.push({\n            pathname: \"restInfo\",\n            search: `restId=${restaurant.id}`,\n        });\n    };\n\n    const handleImgClick = (e, restaurant) => {\n        history.push({\n            pathname: \"restInfo\",\n            search: `restId=${restaurant.id}`,\n        });\n    };\n\n    const handleCheckboxChange = (e, restaurant) => {\n        // console.log(\"handleCheckboxChange\", restaurant);\n    };\n\n    return (\n        <React.Fragment>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <Box mt={1} mb={2}>\n                        <SearchBar\n                            useInputLabel\n                            keyword={currentKeyword}\n                            onChange={handleInputChange}\n                            onSearch={handleSearch}\n                            onKeyUp={handleInputKeyUp}\n                            disabled={disableSearch}\n                            defaultValue={defaultValue}\n                            placeholder=\"請輸入關鍵字\"\n                        />\n                    </Box>\n                </Grid>\n                <Grid item></Grid>\n                {curRestList &&\n                    Array.isArray(curRestList) &&\n                    curRestList.map((rest) => (\n                        <Box mb={2} key={rest.key}>\n                            <Grid item key={rest.key}>\n                                <CardInfo\n                                    restaurant={rest}\n                                    handleInfoClick={handleInfoClick}\n                                    handleImgClick={handleImgClick}\n                                    handleCheckboxChange={handleCheckboxChange}\n                                />\n                            </Grid>\n                        </Box>\n                    ))}\n                {searchState === SERACH_STATE.finishSearch &&\n                    (!curRestList ||\n                        (Array.isArray(curRestList) && curRestList).length ===\n                            0) && (\n                        <Box textAlign=\"center\" mt={4}>\n                            <Typography variant=\"h5\">\n                                抱歉！找不到符合的資訊\n                            </Typography>\n                        </Box>\n                    )}\n                {searchState === SERACH_STATE.initial && (\n                    <Box textAlign=\"center\" mt={4}>\n                        <Typography variant=\"h5\">請輸入關鍵字搜尋</Typography>\n                    </Box>\n                )}\n            </Grid>\n        </React.Fragment>\n    );\n};\n\nexport default Search;\n","import React, { useState, useContext, useReducer, useEffect } from \"react\";\nimport { StoreContext } from \"../../store/StoreProvider\";\n//\nimport Box from \"@material-ui/core/Box\";\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\n// route\nimport { useHistory } from \"react-router-dom\";\n\n// component\nimport NavTab from \"../common/NavTab\";\nimport AllList from \"./AllList\";\nimport NewList from \"./NewList\";\nimport Search from \"./Search\";\n// package\nimport queryString from \"query-string\";\n\nconst tabs = {\n    0: {\n        key: \"home-tab-01\",\n        label: \"新增餐廳\",\n        name: \"NewList\",\n        tabIdx: 0,\n        icon: null,\n        component: NewList,\n    },\n    1: {\n        key: \"home-tab-02\",\n        label: \"餐廳清單\",\n        name: \"AllList\",\n        tabIdx: 1,\n        icon: null,\n        component: AllList,\n    },\n    2: {\n        key: \"home-tab-03\",\n        label: null,\n        name: \"Search\",\n        tabIdx: 2,\n        icon: <SearchOutlinedIcon />,\n        component: Search,\n    },\n};\n\n/**\n * 找出 tabs 中 tab.name 與 name 相同的 tab index\n * 使用 url 的 query string ?type={type} 直接顯示對應的 tab\n * @param {*} _tabs {Array || Object}\n * @param {*} name {String}\n * @returns\n */\nconst tabIndex = (_tabs, name) => {\n    if (!name) return 0;\n    if (!(Array.isArray(_tabs) || typeof _tabs === \"object\")) return 0;\n    const findIndex = (tabsArray, _name) => {\n        let index = 0;\n        tabsArray.forEach((tab, idx) => {\n            if (tab.name.toLowerCase() === _name.toLowerCase()) index = idx;\n        });\n        return index;\n    };\n    const tabs = Array.isArray(_tabs) ? _tabs : Object.values(_tabs);\n    return findIndex(tabs, name);\n};\n\nconst TabComponentHOC = ({ component: Component, restList }) => {\n    return <Component restList={restList} />;\n};\n\nconst Home = () => {\n    // props\n\n    // store\n    const [state, dispatch] = useContext(StoreContext);\n\n    // route\n    const history = useHistory();\n    const {\n        location: { search, pathname },\n    } = history;\n    const { type } = queryString.parse(search);\n    //\n    const [curTab, setCurTab] = useState(tabIndex(tabs, type));\n    const [curRestList, setCurRestList] = useState([]);\n\n    //\n\n    // TODO: get restaurant lsit from API\n    // 依目前的 tab 切換 API\n    useEffect(() => {\n        // axios\n        //     .get(\"url\")\n        //     .then((res) => {\n        //         setCurRestList(res.data);\n        //     })\n        //     .catch((err) => {\n        //         console.log(err);\n        //     }),\n    }, []);\n\n    const handleTabChange = (val) => {\n        setCurTab(val);\n    };\n    return (\n        <React.Fragment>\n            <NavTab\n                tabs={tabs}\n                handleTabChange={handleTabChange}\n                curTab={curTab}\n            />\n            <Box height=\"48px\" />\n            <Box pt=\"25px\" pb=\"70px\">\n                {tabs && tabs[curTab] && (\n                    <TabComponentHOC\n                        // component={() => tabs[curTab].component}\n                        component={tabs[curTab].component}\n                        restList={curRestList}\n                    />\n                )}\n            </Box>\n        </React.Fragment>\n    );\n};\nexport default Home;\n","import React, { useContext, useReducer } from \"react\";\nimport { StoreContext } from \"../../store/StoreProvider\";\n\nconst User = () => {\n    // const store = useContext(StoreContext);\n\n    return (\n        <React.Fragment>\n            <h1>User</h1>\n        </React.Fragment>\n    );\n};\nexport default User;\n","import React, { useContext, useReducer } from \"react\";\nimport { StoreContext } from \"../../store/StoreProvider\";\n\nconst Setting = () => {\n    // const store = useContext(StoreContext);\n\n    return (\n        <React.Fragment>\n            <h1>Setting</h1>\n        </React.Fragment>\n    );\n};\nexport default Setting;\n","import React, { useState, useEffect } from \"react\";\r\nimport Carousel, { Dots } from \"@brainhubeu/react-carousel\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./CustomCarousel.css\";\r\n\r\nconst CustomCarousel = ({ carouselImgUrls, thumbImgUrls }) => {\r\n    const [value, setValue] = useState(0);\r\n    const [thumbnails, setThumbnails] = useState(null);\r\n\r\n    const onChange = (value) => {\r\n        setValue(value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!Array.isArray(thumbImgUrls)) return null;\r\n        const _thumbnails = [];\r\n        thumbImgUrls.forEach((imgUrl) => {\r\n            _thumbnails.push(\r\n                <img\r\n                    key={uuidv4()}\r\n                    className=\"img-example-small\"\r\n                    src={imgUrl}\r\n                />\r\n            );\r\n        });\r\n        setThumbnails(_thumbnails);\r\n    }, [thumbImgUrls]);\r\n\r\n    return (\r\n        <div>\r\n            {Array.isArray(carouselImgUrls) && carouselImgUrls.length > 0 && (\r\n                <React.Fragment>\r\n                    <Carousel\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        plugins={[\"arrows\"]}\r\n                    >\r\n                        {Array.isArray(carouselImgUrls) &&\r\n                            carouselImgUrls.map((url) => (\r\n                                <img key={uuidv4()} src={url} />\r\n                            ))}\r\n                    </Carousel>\r\n                    {Array.isArray(thumbnails) && thumbnails.length > 0 && (\r\n                        <Dots\r\n                            value={value}\r\n                            onChange={onChange}\r\n                            thumbnails={thumbnails}\r\n                        />\r\n                    )}\r\n                </React.Fragment>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomCarousel;\r\n","const RestInfoStyle = (theme) => ({\r\n    // Custom divider\r\n    divider: {\r\n        backgroundColor: \"#f4ab2e\",\r\n        width: \"60px\",\r\n        height: \"5px\",\r\n        borderRadius: \"10px\",\r\n    },\r\n});\r\n\r\nexport default RestInfoStyle;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { StoreContext } from \"../../../store/StoreProvider\";\r\n//\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\n// route\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// component\r\nimport CardInfo from \"../../common/CardInfo\";\r\nimport CustomCarousel from \"../../common/CustomCarousel\";\r\n\r\n// package\r\nimport queryString from \"query-string\";\r\n//\r\nimport { getRestaurant, getMenus } from \"../service\";\r\nimport RestInfoStyle from \"./RestInfoStyle\";\r\n\r\nconst useStyles = makeStyles(RestInfoStyle);\r\n\r\nconst RestInfo = () => {\r\n    // props\r\n\r\n    // store\r\n    const [state, dispatch] = useContext(StoreContext);\r\n\r\n    // route\r\n    const history = useHistory();\r\n    const {\r\n        location: { search, pathname },\r\n    } = history;\r\n    const { restId } = queryString.parse(search);\r\n\r\n    // todo: 先以其中一筆資料測試,\r\n    const [curRest, setCutRest] = useState(null);\r\n    // style\r\n    const classes = useStyles();\r\n    // local state\r\n    const [carouselImgUrls, setCarouselImgUrls] = useState(null);\r\n    const [thumbImgUrls, setThumbImgUrls] = useState(null);\r\n    const [largeImgUrls, setLargeImgUrls] = useState(null);\r\n\r\n    const handleGoBack = () => {\r\n        history.go(-1);\r\n    };\r\n\r\n    // 取得餐廳資訊\r\n    useEffect(() => {\r\n        if (!restId) return null;\r\n        // fetch API to get restaurant data\r\n        getRestaurant(restId, dispatch)\r\n            .then((data) => {\r\n                setCutRest(data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    // 取得餐廳的菜單\r\n    useEffect(() => {\r\n        if (!restId) return null;\r\n        // fetch API to get restaurant data\r\n        getMenus(restId, dispatch)\r\n            .then((data) => {\r\n                const { normalImgUrls, thumbImgUrls, largeImgUrls } = data;\r\n                setCarouselImgUrls(normalImgUrls);\r\n                setThumbImgUrls(thumbImgUrls);\r\n                setLargeImgUrls(largeImgUrls);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    //\r\n    return (\r\n        <React.Fragment>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                {curRest && (\r\n                    <React.Fragment>\r\n                        <Grid item container justify=\"flex-start\">\r\n                            <Grid item>\r\n                                <Box\r\n                                    mt={3}\r\n                                    mx={2}\r\n                                    display=\"flex\"\r\n                                    alignItems=\"setCurrentKeyword\"\r\n                                    onClick={() => handleGoBack()}\r\n                                >\r\n                                    <ArrowBackIcon />\r\n                                    <Typography variant=\"body1\">\r\n                                        Go back\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Box mt={4}>\r\n                                <CardInfo\r\n                                    restaurant={curRest}\r\n                                    // handleInfoClick={handleInfoClick}\r\n                                    // handleImgClick={handleImgClick}\r\n                                    // handleCheckboxChange={handleCheckboxChange}\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Box my={2} className={classes.divider} />\r\n                        </Grid>\r\n                        <Grid item container justify=\"flex-start\">\r\n                            <Box my={2} mx={2} textAlign=\"left\">\r\n                                <Typography variant=\"h6\">餐廳資訊</Typography>\r\n                                <Typography variant=\"body2\">\r\n                                    {curRest.tel}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\">\r\n                                    {curRest.category}\r\n                                </Typography>\r\n                                <Typography variant=\"caption\">\r\n                                    {curRest.description}\r\n                                </Typography>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Box my={2} className={classes.divider} />\r\n                        </Grid>\r\n                        <Grid item container justify=\"flex-start\">\r\n                            <Grid item xs={12}>\r\n                                <Box mt={2} mb={1} mx={2} textAlign=\"left\">\r\n                                    <Typography variant=\"h6\">菜單</Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Box mt={1} mb={2} mx={2}>\r\n                                    <CustomCarousel\r\n                                        carouselImgUrls={carouselImgUrls}\r\n                                        thumbImgUrls={thumbImgUrls}\r\n                                    />\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Box height=\"80px\" />\r\n                        </Grid>\r\n                    </React.Fragment>\r\n                )}\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n    // return <CustomCarousel />;\r\n};\r\nexport default RestInfo;\r\n","import Home from \"./components/Home/index\";\nimport User from \"./components/User/index\";\nimport setting from \"./components/setting\";\nimport RestInfo from \"./components/Home/RestInfo/RestInfo\";\nimport CustomCarousel from \"./components/common/CustomCarousel\";\n//\nconst routes = [\n    {\n        key: \"route-home\",\n        name: \"home\",\n        path: \"/\",\n        withHeader: true,\n        withFooter: true,\n        public: true, // 若在維護開發中請設定 false\n        authority: null,\n        component: Home,\n    },\n    {\n        key: \"route-rest-info\",\n        name: \"rest-info\",\n        path: \"/restInfo\",\n        withHeader: true,\n        withFooter: true,\n        public: true, // 若在維護開發中請設定 false\n        authority: null,\n        component: RestInfo,\n    },\n    {\n        key: \"route-about\",\n        name: \"user\",\n        path: \"/user\",\n        withHeader: true,\n        withFooter: true,\n        public: true, // 若在維護開發中請設定 false\n        authority: null,\n        component: User,\n    },\n    {\n        key: \"route-setting\",\n        name: \"setting\",\n        path: \"/setting\",\n        withHeader: true,\n        withFooter: true,\n        public: true, // 若在維護開發中請設定 false\n        authority: null,\n        component: setting,\n    },\n];\n\nexport default routes;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n// mui-lab\nimport Alert from \"@material-ui/lab/Alert\";\n// style\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"100%\",\n    },\n});\n\nconst NotFound = () => {\n    const classes = useStyles();\n    return (\n        <Grid container justify=\"center\">\n            <Grid item xs={12} sm={10} md={8} lg={8}>\n                <div className={useStyles.root}>\n                    <Alert severity=\"warning\" className={useStyles.root}>\n                        The page is not found\n                    </Alert>\n                </div>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n//\nimport routes from \"../App-route\";\n// component\nimport Layout from \"../layout\";\nimport NotFound from \"../components/auth/NotFound\";\n\nconst RouterLayer = () => {\n    return (\n        <Router>\n            <Switch>\n                {routes &&\n                    routes\n                        .filter((r) => r.public)\n                        .map((route) => (\n                            <Route exact key={route.key} path={route.path}>\n                                <Layout {...route} />\n                            </Route>\n                        ))}\n                <Route>\n                    {/* 若沒有對應的路徑, 則 return NotFound */}\n                    <Layout component={NotFound} />\n                </Route>\n            </Switch>\n        </Router>\n    );\n};\n\nexport default RouterLayer;\n","import React from \"react\";\nimport \"./style/App.css\";\n// store\nimport StoreProvider from \"./store/StoreProvider\";\n// component\nimport AuthLayer from \"./authLayer\";\nimport DataLayer from \"./dataLayer\";\n// route\nimport RouterLayer from \"./routerLayer\";\n\nfunction App() {\n    return (\n        <StoreProvider>\n            {/* AuthLayer: 定義 authentication, 通過 authentication 才會 render children */}\n            <AuthLayer>\n                {/* DataLayer: 要 fetch API(e.g. 網站基本設定) 並儲存至 store, 可在此定義 */}\n                <DataLayer />\n                {/* RouterLayer: 路由設定 */}\n                <RouterLayer />\n            </AuthLayer>\n        </StoreProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}